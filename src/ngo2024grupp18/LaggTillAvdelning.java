/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024grupp18;

import java.util.ArrayList;
import java.util.HashMap;
import oru.inf.InfDB;
import javax.swing.JOptionPane;

/**
 *
 * @author ellenor
 */
public class LaggTillAvdelning extends javax.swing.JFrame {

    private InfDB idb;
    private String aid;
    private String avdid;

    /**
     * Creates new form LaggTillAvdelning
     */
    public LaggTillAvdelning(InfDB idb, String aid, String avdid) {
        initComponents();
        this.idb = idb;
        this.aid = aid;
        this.avdid = avdid;
        this.setLocationRelativeTo(null);
        LaggaTillNyAvdId();
        fyllCBValjStad();
        fyllCBValjProjektchef();
        fyllCBHallbarhetsmal();
    }

    // Genererar ett nytt avd-id genom att hitta högsta avdid och adderar 1 
    private String LaggaTillNyAvdId() {
        String nyAvdId = null;
        try {
            //SQL-fråga för att hämta ut största avdid som finns i avdelning
            String sqlFragaHogstAvdid = "SELECT max(avdid) FROM avdelning";
            System.out.println(sqlFragaHogstAvdid);
            //Hämtar ut resultatet från sql-frågan i en sträng 
            String hogstAvdidDB = idb.fetchSingle(sqlFragaHogstAvdid);
            //Konverterar strängen med högst pid till en int
            int hogstAvdidInt = Integer.parseInt(hogstAvdidDB);
            int nyAvdidInt = hogstAvdidInt + 1;
            System.out.println(nyAvdidInt);
            nyAvdId = Integer.toString(nyAvdidInt);
            tfAvdIDLaggTillAvd.setText(nyAvdId);
            tfAvdIDLaggTillAvd.setEditable(false);
            lblAvdIDLaggTillAvd.requestFocus();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return nyAvdId;
    }

    // Lägger till alla städer i combobox
    public void fyllCBValjStad() {
        try {
            String sqlFraga = "SELECT DISTINCT namn FROM stad";
            System.out.println(sqlFraga);
            ArrayList<String> stadNamnLista = idb.fetchColumn(sqlFraga);

            for (String enStad : stadNamnLista) {
                cbStadLaggTillPartner.addItem(enStad);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }

    }

    // Lägger till alla projektchefer i combobox
    public void fyllCBValjProjektchef() {
        try {
            cbAvdchefLaggTillavd.removeAllItems();
            String sqlFraga = "SELECT aid FROM handlaggare";
            System.out.println(sqlFraga);
            ArrayList<String> projektchefIdLista = idb.fetchColumn(sqlFraga);

            for (String enProjektchefId : projektchefIdLista) {
                String sqlFraga1 = "SELECT fornamn, efternamn FROM anstalld WHERE aid =" + enProjektchefId;
                HashMap<String, String> projektchef = idb.fetchRow(sqlFraga1);
                cbAvdchefLaggTillavd.addItem(projektchef.get("fornamn") + " " + projektchef.get("efternamn"));
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }

    }

    private void fyllCBHallbarhetsmal() {
        try {
            String sqlFraga = "SELECT namn FROM hallbarhetsmal";
            System.out.println(sqlFraga);
            ArrayList<String> hallbarhetsNamnLista;
            hallbarhetsNamnLista = idb.fetchColumn(sqlFraga);
            for (String ettNamn : hallbarhetsNamnLista) {
                cbHallbarhetsmalLaggTillAvd.addItem(ettNamn);

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLaggTillAvdRuta = new javax.swing.JLabel();
        lblAvdIDLaggTillAvd = new javax.swing.JLabel();
        lblNamnLaggTillAvd = new javax.swing.JLabel();
        lblBeskrivningLaggTillAvd = new javax.swing.JLabel();
        lblAdressLaggTillAvd = new javax.swing.JLabel();
        lblEpostLaggTillAvd = new javax.swing.JLabel();
        lblTnrLaggTillAvd = new javax.swing.JLabel();
        lblStadLaggTillAvd = new javax.swing.JLabel();
        lblAvdchefLaggTillAvd = new javax.swing.JLabel();
        btnTillbakaLaggTillAvd = new javax.swing.JButton();
        btnSparaLaggTillAvd = new javax.swing.JButton();
        tfAvdIDLaggTillAvd = new javax.swing.JTextField();
        tfNamnLaggTillAvd = new javax.swing.JTextField();
        tfBeskrivningLaggTillAvd = new javax.swing.JTextField();
        tfAdressLaggTillAvd = new javax.swing.JTextField();
        tfEpostLaggTillAvd = new javax.swing.JTextField();
        tfTnrLaggTillAvd = new javax.swing.JTextField();
        cbStadLaggTillPartner = new javax.swing.JComboBox<>();
        cbAvdchefLaggTillavd = new javax.swing.JComboBox<>();
        cbHallbarhetsmalLaggTillAvd = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblLaggTillAvdRuta.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblLaggTillAvdRuta.setText("Lägg till avdelning");

        lblAvdIDLaggTillAvd.setText("AvdelningsID");

        lblNamnLaggTillAvd.setText("Namn");

        lblBeskrivningLaggTillAvd.setText("Beskrivning");

        lblAdressLaggTillAvd.setText("Adress");

        lblEpostLaggTillAvd.setText("E-post");

        lblTnrLaggTillAvd.setText("Telefonnummer");

        lblStadLaggTillAvd.setText("Stad");

        lblAvdchefLaggTillAvd.setText("Avdelningschef");

        btnTillbakaLaggTillAvd.setText("Tillbaka");
        btnTillbakaLaggTillAvd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaLaggTillAvdActionPerformed(evt);
            }
        });

        btnSparaLaggTillAvd.setText("Spara");
        btnSparaLaggTillAvd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaLaggTillAvdActionPerformed(evt);
            }
        });

        jLabel1.setText("Hållbarhetsmål");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLaggTillAvdRuta)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAvdIDLaggTillAvd)
                            .addComponent(lblBeskrivningLaggTillAvd)
                            .addComponent(lblNamnLaggTillAvd)
                            .addComponent(lblAdressLaggTillAvd)
                            .addComponent(lblEpostLaggTillAvd)
                            .addComponent(lblTnrLaggTillAvd)
                            .addComponent(lblStadLaggTillAvd)
                            .addComponent(lblAvdchefLaggTillAvd)
                            .addComponent(jLabel1))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbHallbarhetsmalLaggTillAvd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfNamnLaggTillAvd)
                            .addComponent(tfBeskrivningLaggTillAvd)
                            .addComponent(tfAdressLaggTillAvd)
                            .addComponent(tfEpostLaggTillAvd)
                            .addComponent(tfTnrLaggTillAvd)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfAvdIDLaggTillAvd, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cbStadLaggTillPartner, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbAvdchefLaggTillavd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35))))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnTillbakaLaggTillAvd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSparaLaggTillAvd)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblLaggTillAvdRuta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAvdIDLaggTillAvd)
                    .addComponent(tfAvdIDLaggTillAvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNamnLaggTillAvd)
                    .addComponent(tfNamnLaggTillAvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBeskrivningLaggTillAvd)
                    .addComponent(tfBeskrivningLaggTillAvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAdressLaggTillAvd)
                    .addComponent(tfAdressLaggTillAvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEpostLaggTillAvd)
                    .addComponent(tfEpostLaggTillAvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTnrLaggTillAvd)
                    .addComponent(tfTnrLaggTillAvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStadLaggTillAvd)
                    .addComponent(cbStadLaggTillPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvdchefLaggTillAvd)
                    .addComponent(cbAvdchefLaggTillavd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbHallbarhetsmalLaggTillAvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTillbakaLaggTillAvd)
                    .addComponent(btnSparaLaggTillAvd))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaLaggTillAvdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaLaggTillAvdActionPerformed
        this.dispose();
        AvdelningAdmin nyAvdAdmin = new AvdelningAdmin(idb, aid, avdid);
        nyAvdAdmin.setVisible(true);
    }//GEN-LAST:event_btnTillbakaLaggTillAvdActionPerformed

    private void btnSparaLaggTillAvdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaLaggTillAvdActionPerformed
        //Gör om nya avdid till en int igen för att kunna lägga i db 
        String nyAvdidStr = tfAvdIDLaggTillAvd.getText();
        int nyAvdidInt = Integer.parseInt(nyAvdidStr);

        // kontrollerar om textfields är tomma
        String laggTillNamn = tfNamnLaggTillAvd.getText();

        if (laggTillNamn.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vänligen fyll i namn");
        }

        String laggTillBeskrivning = tfBeskrivningLaggTillAvd.getText();

        if (laggTillBeskrivning.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vänligen fyll i beskrivning");
        }

        String laggTillAdress = tfAdressLaggTillAvd.getText();

        if (laggTillAdress.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vänligen fyll i adress");
        }

        String laggTillEpost = tfEpostLaggTillAvd.getText();

        if (laggTillEpost.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vänligen fyll i E-post");
        }

        String laggTillTelefonnummer = tfTnrLaggTillAvd.getText();

        if (laggTillTelefonnummer.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vänligen fyll i telefonnummer");
        }

        String laggTillStad = cbStadLaggTillPartner.getSelectedItem().toString();

        if (laggTillStad.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vänligen fyll i stad");
        }

        String laggTillAvdChef = cbAvdchefLaggTillavd.getSelectedItem().toString();

        if (laggTillAvdChef.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vänligen fyll i avdelningschef");
        }

        if (Validering.isKorrektFormatEpostPartner(tfEpostLaggTillAvd)) {
            try {
                //Gör om avdID till en int för att kunna lägga in i db
                String avdIDStr = tfAvdIDLaggTillAvd.getText();
                int avdid = Integer.parseInt(avdIDStr);
                
                String namn = tfNamnLaggTillAvd.getText();
                String beskrivning = tfBeskrivningLaggTillAvd.getText();
                String adress = tfAdressLaggTillAvd.getText();
                String epost = tfEpostLaggTillAvd.getText();
                String telefonnummer = tfTnrLaggTillAvd.getText();

                //Gör om stad till en int för att kunna lägga i db
                String stadStr = cbStadLaggTillPartner.getSelectedItem().toString();
                String sqlFragaStad = "SELECT sid FROM stad WHERE namn = '" + stadStr + "'";
                System.out.println(sqlFragaStad);
                String sidString = idb.fetchSingle(sqlFragaStad);
                System.out.println(sidString);
                int stad = Integer.parseInt(sidString);

                //Gör om avdchef till en int för att kunna lägga i db
                String avdchefNamn = cbAvdchefLaggTillavd.getSelectedItem().toString();
                String sqlFragaAvdChef = "SELECT aid FROM anstalld WHERE CONCAT(fornamn, ' ', efternamn) = '" + avdchefNamn + "'";
                System.out.println(sqlFragaAvdChef);
                String avdChefAidStr = idb.fetchSingle(sqlFragaAvdChef);
                int avdchef = Integer.parseInt(avdChefAidStr);

                String sqlFraga = "INSERT INTO avdelning (avdid, namn, beskrivning, adress, epost, telefon, stad, chef) VALUES (" + nyAvdidInt + ", '" + namn + "','" + beskrivning + "', '" + adress + "', '" + epost + "', '" + telefonnummer + "', " + stad + ", " + avdchef + ")";
                System.out.println(sqlFraga);
                idb.insert(sqlFraga);

                String nyttMalStr = cbHallbarhetsmalLaggTillAvd.getSelectedItem().toString();
                String sqlFragaHBMal = "SELECT hid FROM hallbarhetsmal WHERE namn = '" + nyttMalStr + "'";
                System.out.println(sqlFragaHBMal);
                String hidStr = idb.fetchSingle(sqlFragaHBMal);
                int hid = Integer.parseInt(hidStr);

                String sqlFraga2 = "INSERT INTO avd_hallbarhet (avdid, hid)"
                        + "VALUES (" + avdid + ", " + hid + ")";
                idb.insert(sqlFraga2);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSparaLaggTillAvdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSparaLaggTillAvd;
    private javax.swing.JButton btnTillbakaLaggTillAvd;
    private javax.swing.JComboBox<String> cbAvdchefLaggTillavd;
    private javax.swing.JComboBox<String> cbHallbarhetsmalLaggTillAvd;
    private javax.swing.JComboBox<String> cbStadLaggTillPartner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAdressLaggTillAvd;
    private javax.swing.JLabel lblAvdIDLaggTillAvd;
    private javax.swing.JLabel lblAvdchefLaggTillAvd;
    private javax.swing.JLabel lblBeskrivningLaggTillAvd;
    private javax.swing.JLabel lblEpostLaggTillAvd;
    private javax.swing.JLabel lblLaggTillAvdRuta;
    private javax.swing.JLabel lblNamnLaggTillAvd;
    private javax.swing.JLabel lblStadLaggTillAvd;
    private javax.swing.JLabel lblTnrLaggTillAvd;
    private javax.swing.JTextField tfAdressLaggTillAvd;
    private javax.swing.JTextField tfAvdIDLaggTillAvd;
    private javax.swing.JTextField tfBeskrivningLaggTillAvd;
    private javax.swing.JTextField tfEpostLaggTillAvd;
    private javax.swing.JTextField tfNamnLaggTillAvd;
    private javax.swing.JTextField tfTnrLaggTillAvd;
    // End of variables declaration//GEN-END:variables
}
